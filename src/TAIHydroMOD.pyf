!    -*- f90 -*-
! Note: the context of this file is case sensitive.

python module RK4Fehlberg__user__routines 
    interface RK4Fehlberg_user_interface 
        subroutine odeFunc(invars,K1) ! in :TAIHydroMOD:rungekutta4_mod.f90:RungeKutta4:RK4Fehlberg:unknown_interface
            real(kind=8) dimension(:,:),intent(in) :: invars
            real(kind=8) dimension(:,:),intent(inout) :: K1
        end subroutine odeFunc
    end interface RK4Fehlberg_user_interface
end python module RK4Fehlberg__user__routines
python module TAIHydroMOD ! in 
    interface  ! in :TAIHydroMOD
        module RungeKutta4 ! in :TAIHydroMOD:rungekutta4_mod.f90
            integer, parameter,optional :: MAXITER=100
            integer, parameter,optional :: adaptive_mode=101
            integer, parameter,optional :: fixed_mode=102
            real(kind=8), parameter,optional :: TOL_REL=1.d-6
            real(kind=8), parameter,optional :: INFTSML=1.d-30
            real(kind=8), allocatable,dimension(:,:) :: K1
            real(kind=8), allocatable,dimension(:,:) :: K2
            real(kind=8), allocatable,dimension(:,:) :: K3
            real(kind=8), allocatable,dimension(:,:) :: K4
            real(kind=8), allocatable,dimension(:,:) :: K5
            real(kind=8), allocatable,dimension(:,:) :: K6
            real(kind=8), allocatable,dimension(:,:) :: nxt4th
            real(kind=8), allocatable,dimension(:,:) :: nxt5th
            real(kind=8), allocatable,dimension(:,:) :: interim
            real(kind=8), allocatable,dimension(:,:) :: rerr
            subroutine RK4Fehlberg(odeFunc,invars,outvars,mode,tol,curstep,nextstep,outerr) ! in :TAIHydroMOD:rungekutta4_mod.f90:RungeKutta4
                use RK4Fehlberg__user__routines
                external odeFunc
                real(kind=8) dimension(:,:),intent(in) :: invars
                real(kind=8) dimension(:,:),intent(inout) :: outvars
                integer intent(in) :: mode
                real(kind=8) dimension(:),intent(in) :: tol
                real(kind=8) dimension(1),intent(inout) :: curstep
                real(kind=8) dimension(1),intent(inout) :: nextstep
                integer dimension(1),intent(inout) :: outerr
            end subroutine RK4Fehlberg
        end module RungeKutta4
        module TAIHydroMOD ! in :TAIHydroMOD:tai_hydro_mod.f90
            use RungeKutta4, only: FVSKT_Superbee,FVSKT_celledge
            integer, parameter,optional :: NVAR=5
            integer, parameter,optional :: NPFT=4
            real(kind=8), parameter,optional :: PI=3.14159265d+0
            real(kind=8), parameter,optional :: e=2.71828183d+0
            real(kind=8), parameter,optional :: Roul=1028.0
            real(kind=8), parameter,optional :: Roua=1.225
            real(kind=8), parameter,optional :: Karman=0.41
            real(kind=8), parameter,optional :: G=9.8
            real(kind=8) :: par_d50
            real(kind=8) :: par_Cz0
            real(kind=8) dimension(4) :: par_cD0
            real(kind=8) dimension(4) :: par_ScD
            real(kind=8) dimension(4) :: par_alphaA
            real(kind=8) dimension(4) :: par_betaA
            real(kind=8) dimension(4) :: par_alphaD
            real(kind=8) dimension(4) :: par_betaD
            real(kind=8) :: par_Kdf
            real(kind=8) :: par_cbc
            real(kind=8) :: par_fr
            real(kind=8) :: force_T
            real(kind=8) :: force_U10
            real(kind=8), allocatable,dimension(:,:) :: m_uhydro
            real(kind=8), allocatable,dimension(:) :: m_X
            real(kind=8), allocatable,dimension(:) :: m_dX
            real(kind=8), allocatable,dimension(:) :: m_Zh
            real(kind=8), allocatable,dimension(:) :: m_dZh
            integer, allocatable,dimension(:) :: m_pft
            real(kind=8), allocatable,dimension(:) :: m_U
            real(kind=8), allocatable,dimension(:) :: m_Hwav
            real(kind=8), allocatable,dimension(:) :: m_Ewav
            real(kind=8), allocatable,dimension(:) :: m_tau
            real(kind=8), allocatable,dimension(:) :: m_Esed
            real(kind=8), allocatable,dimension(:) :: m_Dsed
            real(kind=8), allocatable,dimension(:) :: m_Cz
            real(kind=8), allocatable,dimension(:) :: m_kwav
            real(kind=8), allocatable,dimension(:) :: m_Qb
            real(kind=8), allocatable,dimension(:) :: m_Swg
            real(kind=8), allocatable,dimension(:) :: m_Sbf
            real(kind=8), allocatable,dimension(:) :: m_Swc
            real(kind=8), allocatable,dimension(:) :: m_Sbrk
            real(kind=8), allocatable,dimension(:,:) :: tmp_uhydroL
            real(kind=8), allocatable,dimension(:,:) :: tmp_uhydroR
            real(kind=8), allocatable,dimension(:,:) :: tmp_phi
            real(kind=8), allocatable,dimension(:,:) :: tmp_FL
            real(kind=8), allocatable,dimension(:,:) :: tmp_FR
            real(kind=8), allocatable,dimension(:,:) :: tmp_P
            real(kind=8), allocatable,dimension(:,:) :: tmp_SRC
            real(kind=8), allocatable,dimension(:,:) :: tmp_eigval
            real(kind=8), allocatable,dimension(:) :: tmp_aL
            real(kind=8), allocatable,dimension(:) :: tmp_aR
            real(kind=8), allocatable,dimension(:) :: tmp_U
            real(kind=8), allocatable,dimension(:) :: tmp_Cg
            real(kind=8), allocatable,dimension(:) :: tmp_Nmax
            real(kind=8), allocatable,dimension(:) :: const_Qb
            integer :: NX
            subroutine Initialize(X,Zh) ! in :TAIHydroMOD:tai_hydro_mod.f90:TAIHydroMOD
                real(kind=8) dimension(:),intent(in) :: X
                real(kind=8) dimension(:),intent(in) :: Zh
            end subroutine Initialize
            subroutine Destruct ! in :TAIHydroMOD:tai_hydro_mod.f90:TAIHydroMOD
            end subroutine Destruct
            subroutine SetModelParameters(d50,Cz0,Kdf,cbc,fr,alphaA,betaA,alphaD,betaD,cD0,ScD) ! in :TAIHydroMOD:tai_hydro_mod.f90:TAIHydroMOD
                real(kind=8) intent(in) :: d50
                real(kind=8) intent(in) :: Cz0
                real(kind=8) intent(in) :: Kdf
                real(kind=8) intent(in) :: cbc
                real(kind=8) intent(in) :: fr
                real(kind=8) dimension(:),intent(in) :: alphaA
                real(kind=8) dimension(:),intent(in) :: betaA
                real(kind=8) dimension(:),intent(in) :: alphaD
                real(kind=8) dimension(:),intent(in) :: betaD
                real(kind=8) dimension(:),intent(in) :: cD0
                real(kind=8) dimension(:),intent(in) :: ScD
            end subroutine SetModelParameters
            subroutine ModelSetup(Zh,pft,Bag,Ero,Dep,T,U10,h0,U0,Hwav0,Css0,Cj0) ! in :TAIHydroMOD:tai_hydro_mod.f90:TAIHydroMOD
                real(kind=8) dimension(:),intent(in) :: Zh
                integer dimension(:),intent(in) :: pft
                real(kind=8) dimension(:),intent(in) :: Bag
                real(kind=8) dimension(:),intent(in) :: Ero
                real(kind=8) dimension(:),intent(in) :: Dep
                real(kind=8) intent(in) :: T
                real(kind=8) intent(in) :: U10
                real(kind=8) intent(in) :: h0
                real(kind=8) intent(in) :: U0
                real(kind=8) intent(in) :: Hwav0
                real(kind=8) intent(in) :: Css0
                real(kind=8) intent(in) :: Cj0
            end subroutine ModelSetup
            subroutine ModelCallback ! in :TAIHydroMOD:tai_hydro_mod.f90:TAIHydroMOD
            end subroutine ModelCallback
            subroutine TAIHydroEquations(uhydro,duhydro) ! in :TAIHydroMOD:tai_hydro_mod.f90:TAIHydroMOD
                real(kind=8) dimension(:,:),intent(in) :: uhydro
                real(kind=8) dimension(:,:),intent(inout) :: duhydro
            end subroutine TAIHydroEquations
        end module TAIHydroMOD
    end interface 
end python module TAIHydroMOD

! This file was auto-generated with f2py (version:2).
! See http://cens.ioc.ee/projects/f2py2e/
